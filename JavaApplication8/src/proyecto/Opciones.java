/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import Conexion.PHPClass;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.json.JSONException;


public class Opciones extends javax.swing.JFrame {


    
    PHPClass obj = new PHPClass();
    
    private int r,rD ;
    
    public Opciones() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneApartar = new javax.swing.JScrollPane();
        jTableApartar = new javax.swing.JTable();
        jLabelDocente = new javax.swing.JLabel();
        jLabelCiudad = new javax.swing.JLabel();
        jComboBoxDocente = new javax.swing.JComboBox<>();
        jComboBoxCiudad = new javax.swing.JComboBox<>();
        jButtonApartar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableApartar.setFont(new java.awt.Font("Oswald", 0, 11)); // NOI18N
        jTableApartar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tematica", "Descripcion", "Fecha y Hora", "Cupos"
            }
        ));
        jScrollPaneApartar.setViewportView(jTableApartar);

        jLabelDocente.setFont(new java.awt.Font("Oswald", 0, 11)); // NOI18N
        jLabelDocente.setForeground(new java.awt.Color(0, 136, 154));
        jLabelDocente.setText("Docente:");

        jLabelCiudad.setFont(new java.awt.Font("Oswald", 0, 11)); // NOI18N
        jLabelCiudad.setForeground(new java.awt.Color(0, 136, 154));
        jLabelCiudad.setText("Cuidad:");

        jComboBoxDocente.setFont(new java.awt.Font("Oswald", 0, 11)); // NOI18N
        jComboBoxDocente.setForeground(new java.awt.Color(0, 136, 154));

        jComboBoxCiudad.setFont(new java.awt.Font("Oswald", 0, 11)); // NOI18N
        jComboBoxCiudad.setForeground(new java.awt.Color(0, 136, 154));

        jButtonApartar.setText("Apartar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonApartar)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelDocente)
                                .addComponent(jLabelCiudad))
                            .addGap(39, 39, 39)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBoxDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBoxCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(125, 125, 125)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPaneApartar, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneApartar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDocente)
                    .addComponent(jComboBoxDocente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCiudad)
                    .addComponent(jComboBoxCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jButtonApartar)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Opciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApartar;
    private javax.swing.JComboBox<String> jComboBoxCiudad;
    private javax.swing.JComboBox<String> jComboBoxDocente;
    private javax.swing.JLabel jLabelCiudad;
    private javax.swing.JLabel jLabelDocente;
    private javax.swing.JScrollPane jScrollPaneApartar;
    private javax.swing.JTable jTableApartar;
    // End of variables declaration//GEN-END:variables
    
    public void iniciar(int d1) throws JSONException {
        //System.out.println("Este es es dato " + d1);
        
        jComboBoxCiudad.removeAllItems();
        //jComboBoxDocente.removeAllItems();
        jComboBoxCiudad.addItem("Seleccionar");
        
        /*for (int j = 0; j < obj.getInfoSubjectsUser().size();
                j++)
            if (d1 == obj.getInfoSubjectsUser().get(j).getMateria())     
                jComboBoxCiudad.addItem(
                        Integer.toString(obj.getInfoSubjectsUser().get(j).getMateria())
                );*/
        
        for (int j = 0; j < obj.getInfoSubjectsUser().size();
                j++) {
            
            if (d1 == obj.getInfoSubjectsUser().get(j).getMateria()) {
                String ciudad = obj.getInfoSubjectsUser().get(j).getCiudad();
                jComboBoxCiudad.addItem(ciudad);
            }
        }    
        
                DefaultTableModel modelo = (DefaultTableModel) jTableApartar.getModel();
                

                jComboBoxCiudad.addItemListener(new ItemListener() {
                    
                    @Override
                    public void itemStateChanged(ItemEvent event) {
                        if (event.getStateChange() == ItemEvent.SELECTED) {
                            jComboBoxDocente.removeAllItems();
                            r = jComboBoxCiudad.getSelectedIndex();
                            //System.out.println(r);

                            try {
                                for (int i = 0; i < obj.getInfoSubjectsUser().size();i++) {
                                    if (d1 == obj.getInfoSubjectsUser().get(i).getMateria())
                                        //if (r == i + 1) 
                                        jComboBoxDocente.addItem(obj.getInfoSubjectsUser().get(i).getNombreDocente());        
                                }
                                } catch (JSONException ex) {
                                Logger.getLogger(Opciones.class.getName()).log(Level.SEVERE, null, ex);
                            }    
                        }
                    }                        
                });
                
                jComboBoxDocente.addItemListener(new ItemListener() {
                    @Override
                    public void itemStateChanged(ItemEvent event) {
                        if (event.getStateChange() == ItemEvent.SELECTED) {
                            modelo.setRowCount(0);
                            rD = r - 1;
                            System.out.println(rD);

                            try {
                                for (int i = 0; i < obj.getInfoSubjectsUser().size();
                                        i++) {
                                    if (d1 == obj.getInfoSubjectsUser().get(i).getMateria()) {
                                        //if (rD == i){
                                            System.out.println(obj.getInfoSubjectsUser().get(i).getNombreDocente());

                                            modelo.addRow(new Object[]{
                                                obj.getInfoSubjectsUser().get(i).getNombreTematica(),
                                                obj.getInfoSubjectsUser().get(i).getDescripcionTematica(),
                                                obj.getInfoSubjectsUser().get(i).getHoraFecha(),
                                                "No hay dato"});
                                        }
                                }
                            } catch (JSONException ex) {
                                Logger.getLogger(Opciones.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                });

    }
}
